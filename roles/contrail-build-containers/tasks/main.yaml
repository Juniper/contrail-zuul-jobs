---
- name: Prepare build configuration - common.env
  template:
    src: common.env.j2
    dest: "{{ item }}/common.env"
  with_items:
    - "{{ docker_build_dir }}"
    - "{{ deployers_build_dir }}"

- name: Send common.env to the executor
  synchronize:
    src: "{{ docker_build_dir }}/common.env"
    dest: "{{ zuul.executor.log_root }}/"
    mode: pull
  become: true

- name: Pull branch contrail-general-base 
  command: docker pull ci.repo.englab.juniper.net:5010/contrail-general-base:{{ contrail_packaging.version.public }}-latest
  become: true
  register: pull
  retries: 5
  delay: 5
  until: pull.rc == 0

- name: Re-tag branch contrail-general-base 
  command: docker tag ci.repo.englab.juniper.net:5010/contrail-general-base:{{ contrail_packaging.version.public }}-latest {{ contrail_docker_registry }}/contrail-general-base:{{ contrail_packaging.repo_name }}
  become: true

- name: Push contrail-general-base to local registry
  command: docker push  {{ contrail_docker_registry }}/contrail-general-base:{{ contrail_packaging.repo_name }}
  become: true
  register: push
  retries: 5
  delay: 5
  until: push.rc == 0

- name: Get list of repo files
  command: "ls {{ rpm_repo_config_dir }}"
  register: repo_list

- name: Copy the repo files to container build context
  copy:
    src: "{{ rpm_repo_config_dir }}/{{ item }}"
    dest: "{{ docker_build_dir }}/{{ item }}.template"
    remote_src: true
  with_items:
    - "{{ repo_list.stdout_lines | reject('equalto', 'epel.repo') | list }}"

- name: Template openstack repo file
  template:
    src: "openstack.repo.j2"
    dest: "{{ docker_build_dir }}/openstack.repo.template"
  when: "ansible_distribution == 'CentOS'"

- name: Prepare container list
  shell: ./build.sh list | grep -v INFO | grep -v contrail-general-base
  become: true
  register: docker_list
  args:
    chdir: "{{ docker_build_dir }}/containers"

- name: Prepare deployers container list
  shell: ./build.sh list | grep -v INFO
  become: true
  register: deployers_list
  args:
    chdir: "{{ deployers_build_dir }}/containers"

- name: "HACK: disable IPv6"
  shell: |
    sysctl -w net.ipv6.conf.all.disable_ipv6=1
    sysctl -w net.ipv6.conf.default.disable_ipv6=1
  ignore_errors: true
  become: true

- name: Build microservices
  include: build_container.yaml
  vars:
    build_dir: "{{ docker_build_dir }}"
  with_items: "{{ docker_list.stdout_lines }}"

# copy with remote_src adn recursive works from ansible 2.8
# https://github.com/ansible/ansible/issues/14131
- name: Copy local version repositories to kolla-ansible-deployer container
  command: "cp -fR {{ item | quote }} {{ deployers_build_dir + '/containers/kolla-ansible-deployer/src/' | quote }}"
  become: true
  with_items:
    - "{{ ansible_deployer_dir }}"
    - "{{ kolla_ansible_dir }}"

# copy with remote_src adn recursive works from ansible 2.8
# https://github.com/ansible/ansible/issues/14131
- name: Copy local version repositories to kolla-ansible-deployer container
  command: "cp -fR {{ openshift_ansible_dir | quote }} {{ deployers_build_dir + '/containers/openshift-ansible-deployer/src/' | quote }}"
  become: true

# copy with remote_src adn recursive works from ansible 2.8
# https://github.com/ansible/ansible/issues/14131
- name: Copy local version repositories to helm-deployer container
  command: "cp -fR {{ item | quote }} {{ deployers_build_dir + '/containers/helm-deployer/src/' | quote }}"
  become: true
  with_items:
    - "{{ helm_deployer_dir }}"
    - "{{ openstack_helm_dir }}"
    - "{{ openstack_helm_infra_dir }}"

- name: Build deployers
  include: build_container.yaml
  vars:
    build_dir: "{{ deployers_build_dir }}"
  with_items: "{{ deployers_list.stdout_lines }}"

