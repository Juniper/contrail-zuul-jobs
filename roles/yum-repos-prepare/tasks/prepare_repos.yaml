---

- name: include OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}.yaml"
    - "{{ ansible_os_family | lower }}.yaml"
    - "default.yaml"

- when:
    - cloud_orchestrator == 'openstack'
    - ansible_distribution == 'RedHat'
  block:
    - name: include OpenStack-specific repos
      include_vars: "{{ ansible_distribution | lower }}_openstack_{{ openstack_version }}.yaml"

    - name: add OpenStack repos to repos_add
      set_fact:
        repos_add: "{{ repos_add }} + {{ openstack_repos_add }}"

- when:
    - cloud_orchestrator == 'kubernetes'
    - ansible_distribution == 'RedHat'
  block:
    - name: include OpenShift-specific repos
      include_vars: '{{ ansible_distribution | lower }}_openshift_{{ openshift_version }}.yaml'

    - name: add OpenShift repos to repos_add
      set_fact:
        repos_add: '{{ repos_add }} + {{ openshift_repos_add }}'

- name: disable subscription-manager on RHEL
  command: subscription-manager config --rhsm.manage_repos=0
  become: yes
  become_user: root
  when: 'ansible_distribution == "RedHat"'

- name: remove the upstream yum repos
  yum_repository:
    name: "{{ item.name }}"
    file: "{{ item.file }}"
    state: absent
  with_items: "{{ repos_remove }}"
  become: yes
  become_user: root

- name: prepare local base yum mirror repo file
  yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    file: "{{ repos_file }}"
    baseurl: "{{ repos_baseurl }}/{{ item.repo }}/"
    enabled: yes
    gpgcheck: no
  with_items: "{{ repos_add }}"
  become: yes
  become_user: root

- name: prepare epel mirror repo file
  yum_repository:
    name: epel-mirror
    description: CentOS epel mirror
    file: epel
    baseurl: "http://{{ docker_registry.fqdn }}/pulp/repos/centos74-epel/"
    enabled: "{{ use_epel }}"
    gpgcheck: no
  become: yes
  become_user: root

- name: check if repodata exists to set corrrect path for {{ item }}
  stat:
    path: '{{ nexus_repo_path }}/{{ item }}/repodata/repomd.xml'
  with_items:
    - source
    - binary
  register: stat_result

- name: show path for {{ item }}
  debug:
    msg: '{{ item }}'
  with_items:
    - '{{ nexus_repo_path }}/source/repodata/repomd.xml'
    - '{{ base_url }}/binary/repodata/repomd.xml'

# - name: check result and set path.
#   debug:
#     msg: 'true'
#   when: stat_result.stat.exists == True

# - name: check result and set path to tcp per review
#   debug:
#     msg: 'false'
#   when: stat_result.stat.exists == False

- name: checkout
  debug:
    msg: 'true checkout'
  when: '"review.opencontrail.org/Juniper/contrail-third-party-packages" in zuul._projects'

- name: prepare third party cache yum Nexus repo
  yum_repository:
    name: tpc-source
    description: Contrail third-party dependencies
    file: tpc-source
    # baseurl: '{{ nexus_repo_path }}/source/'
    baseurl: '{{ base_url }}/source/'
    enabled: yes
    gpgcheck: no
  become: yes
  become_user: root

- name: prepare third party cache yum Nexus repo
  yum_repository:
    name: tpc-binary
    description: Contrail third-party dependencies
    file: tpc-binary
    baseurl: '{{ base_url }}/binary/'
    enabled: yes
    gpgcheck: no
  become: yes
  become_user: root
