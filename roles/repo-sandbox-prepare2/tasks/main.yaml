- name: Include OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution_release }}.yaml"
    - "{{ ansible_os_family|lower }}.yaml"

- name: Copy repo script over to the VM
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}"
    mode: preserve
  with_items:
    - repo

- name: Create directory for the sandbox
  file:
    path: "{{ packaging.target_dir }}"
    state: directory

- name: Initialize android repo
  command: "{{ ansible_env.HOME }}/repo init -u {{ ansible_env.HOME }}/{{ zuul._projects['review.opencontrail.org/Juniper/contrail-vnc'].src_dir }}"
  args:
    chdir: "{{ packaging.target_dir }}"

- name: Create CI & snapshot manifests
  generate_manifest:
    sandbox_root: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}"
    projects: "{{ zuul._projects }}"
    manifest_path: "{{ ansible_env.HOME }}/{{ zuul._projects['review.opencontrail.org/Juniper/contrail-vnc'].src_dir }}/default.xml"
    snapshot_path: "{{ ansible_env.HOME }}/manifest.xml"

- name: Synchronize repositories to the sandbox
  command: "{{ ansible_env.HOME }}/repo sync --quiet"
  args:
    chdir: "{{ packaging.target_dir }}"

# `origins` fact is set by the generate_manifest module
- name: Restore project origins
  command: git remote add origin {{ item.value }}
  args:
    chdir: "{{ item.key }}"
  with_dict: "{{ origins }}"

- name: Clean-up auxiliary repo files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - repo

